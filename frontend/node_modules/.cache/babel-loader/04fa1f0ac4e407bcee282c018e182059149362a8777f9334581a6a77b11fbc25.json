{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  products: [],\n  productsNumber: 0,\n  totalPrice: 0\n};\nexport const cartSlice = createSlice({\n  name: 'cart',\n  initialState,\n  reducers: {\n    addToCart: (state, action) => {\n      console.log(action.payload);\n      const addProductExists = state.products.find(product => product.id === action.payload.id);\n      if (addProductExists) {\n        addProductExists.quantity += parseInt(action.payload.quantity);\n      } else {\n        state.products.push({\n          ...action.payload,\n          quantity: parseInt(action.payload.quantity)\n        });\n        state.productsNumber = state.productsNumber + 1;\n      }\n      state.totalPrice += action.payload.price * parseInt(action.payload.quantity);\n    },\n    removeFromCart: (state, action) => {\n      // find the product removing the array\n      const productToRemove = state.products.find(product => product.id === action.payload);\n      // remove the quantity from product number\n      state.productsNumber = state.productsNumber - productToRemove.quantity;\n\n      // find index of the product removing\n      const index = state.products.findIndex(product => product.id === action.payload);\n      state.totalPrice -= state.products[index].price * parseInt(state.products[index].quantity);\n      // remove from the array\n      state.products.splice(index, 1);\n    },\n    incrementInCart: (state, action) => {\n      // find the product removing the array\n      const productToIncrease = state.products.find(product => product.id === action.payload);\n      // remove the quantity from product number\n      state.productsNumber++;\n      productToIncrease.quantity++;\n\n      // find index of the product removing\n      const index = state.products.findIndex(product => product.id === action.payload);\n      state.totalPrice += state.products[index].price;\n    },\n    decrementInCart: (state, action) => {\n      // find the product removing the array\n      const productToRemove = state.products.find(product => product.id === action.payload);\n      state.productsNumber = state.productsNumber - 1;\n      if (productToRemove.quantity === 1) {\n        // find index of the product removing\n        const index = state.products.findIndex(product => product.id === action.payload);\n        state.totalPrice -= state.products[index].price * parseInt(state.products[index].quantity);\n        // remove from the array\n        state.products.splice(index, 1);\n      } else {\n        // remove the quantity from product number\n        productToRemove.quantity--;\n\n        // find index of the product removing\n        const index = state.products.findIndex(product => product.id === action.payload);\n        state.totalPrice -= state.products[index].price;\n      }\n    }\n  }\n});\nexport const {\n  addToCart,\n  removeFromCart,\n  incrementInCart,\n  decrementInCart\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","products","productsNumber","totalPrice","cartSlice","name","reducers","addToCart","state","action","console","log","payload","addProductExists","find","product","id","quantity","parseInt","push","price","removeFromCart","productToRemove","index","findIndex","splice","incrementInCart","productToIncrease","decrementInCart","actions","reducer"],"sources":["/Users/nguyentritin/Documents/reactjs/bookstore/frontend/src/redux/cartSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  products: [],\n  productsNumber: 0,\n  totalPrice: 0,\n};\n\nexport const cartSlice = createSlice({\n  name: 'cart',\n  initialState,\n  reducers: {\n    addToCart: (state, action) => {\n      console.log(action.payload);\n      const addProductExists = state.products.find(\n        (product) => product.id === action.payload.id\n      );\n      if (addProductExists) {\n        addProductExists.quantity += parseInt(action.payload.quantity);\n      } else {\n        state.products.push({\n          ...action.payload,\n          quantity: parseInt(action.payload.quantity),\n        });\n        state.productsNumber = state.productsNumber + 1;\n      }\n      state.totalPrice +=\n        action.payload.price * parseInt(action.payload.quantity);\n    },\n    removeFromCart: (state, action) => {\n      // find the product removing the array\n      const productToRemove = state.products.find(\n        (product) => product.id === action.payload\n      );\n      // remove the quantity from product number\n      state.productsNumber = state.productsNumber - productToRemove.quantity;\n\n      // find index of the product removing\n      const index = state.products.findIndex(\n        (product) => product.id === action.payload\n      );\n      state.totalPrice -=\n        state.products[index].price * parseInt(state.products[index].quantity);\n      // remove from the array\n      state.products.splice(index, 1);\n    },\n    incrementInCart: (state, action) => {\n      // find the product removing the array\n      const productToIncrease = state.products.find(\n        (product) => product.id === action.payload\n      );\n      // remove the quantity from product number\n      state.productsNumber++;\n      productToIncrease.quantity++;\n\n      // find index of the product removing\n      const index = state.products.findIndex(\n        (product) => product.id === action.payload\n      );\n      state.totalPrice += state.products[index].price;\n    },\n    decrementInCart: (state, action) => {\n      // find the product removing the array\n      const productToRemove = state.products.find(\n        (product) => product.id === action.payload\n      );\n      state.productsNumber = state.productsNumber - 1;\n      if (productToRemove.quantity === 1) {\n        // find index of the product removing\n        const index = state.products.findIndex(\n          (product) => product.id === action.payload\n        );\n        state.totalPrice -=\n          state.products[index].price *\n          parseInt(state.products[index].quantity);\n        // remove from the array\n        state.products.splice(index, 1);\n      } else {\n        // remove the quantity from product number\n        productToRemove.quantity--;\n\n        // find index of the product removing\n        const index = state.products.findIndex(\n          (product) => product.id === action.payload\n        );\n        state.totalPrice -= state.products[index].price;\n      }\n    },\n  },\n});\n\nexport const { addToCart, removeFromCart, incrementInCart, decrementInCart } =\n  cartSlice.actions;\nexport default cartSlice.reducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}